{"version":3,"file":"mkinfo.js","mappings":"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","sources":["webpack://mk-info/webpack/bootstrap","webpack://mk-info/webpack/runtime/global","webpack://mk-info/webpack/runtime/publicPath","webpack://mk-info/./src/helpers/helpers.ts","webpack://mk-info/./src/Conzole.ts","webpack://mk-info/./src/Program.ts","webpack://mk-info/./src/OptionsManager.ts","webpack://mk-info/./src/OptionsProgram.ts","webpack://mk-info/./src/AboutProgram.ts","webpack://mk-info/./src/Dialog.ts","webpack://mk-info/./src/LinksProgram.ts","webpack://mk-info/./src/EloRapProgram.ts","webpack://mk-info/./src/HelpProgram.ts","webpack://mk-info/./src/CVProgram.ts","webpack://mk-info/./src/ChangeLogProgram.ts","webpack://mk-info/./src/RepoProgram.ts","webpack://mk-info/./src/index.ts","webpack://mk-info/./src/MKInfo.ts","webpack://mk-info/./src/i18n.ts","webpack://mk-info/./src/logo.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export function isMobile() {\n  return window.innerWidth <= 600\n}\n\nexport function objectHasOwnProperty(object: object, prop: string) {\n  return Object.prototype.hasOwnProperty.call(object, prop)\n}\n\nexport function sleep(time: number): Promise<number> {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(time)\n    }, time)\n  })\n}","import {sleep, objectHasOwnProperty} from './helpers/helpers'\n\ninterface ClassNames {\n  main: string,\n  line: string,\n  lineWithQuestion: string,\n  lineUserInput: string,\n  lineUserInputActive: string,\n  userInput: string,\n  subline: string,\n  link: string,\n  question: string\n}\n\ntype inputHandler = (inputText: string) => void\n\ninterface lazyPrintOptions {\n  pauseMaxTime: number,\n  pauseMinTime?: number\n}\n\ninterface KeyDescription {\n  key: string,\n  description: string\n}\n\nclass Conzole {\n  private mainElement: HTMLElement\n  private classNames: ClassNames\n  private busy = false\n  private inputHandlers: inputHandler[] = []\n  private history: string[] = []\n  private histroyIndex = -1\n  private beforeHistroyInput = ''\n  private currentActiveLine: HTMLTextAreaElement | null = null\n  private speedUpLazyPrint = false\n\n  constructor(el: HTMLElement, namespace = 'conzole') {\n    this.mainElement = el\n    this.createClassNames(namespace)\n    this.prepareMainElement()\n  }\n\n  async print(output: string | string[], lazy: boolean | lazyPrintOptions = false, classModifier?: string) {\n    if (this.busy) throw(new Error('Conzole is busy right now'))\n\n    this.busy = true\n    const line = this.createNewLine(classModifier)\n    const linesToPrint = typeof output === 'string' ? [output] : [...output]\n    const keyListener = lazy \n      ? (event: KeyboardEvent) =>  {\n        if (event.key === ' ') {\n          this.speedUpLazyPrint = true\n        }\n      }\n      : null\n\n    if (keyListener) {\n      document.body.addEventListener('keyup', keyListener)\n    }\n\n    for (let lineToPrint of linesToPrint) {\n      const subline = this.createNewSublineElement()\n      line.appendChild(subline)\n\n      if (lazy) {\n        await this.printLazy(subline, lineToPrint, typeof lazy === 'object' ? lazy : undefined)\n        if (!this.speedUpLazyPrint) await sleep(100)\n      } else {\n        const linksMatch = lineToPrint.match(/\\[link=.*?].*?\\[\\/link\\]/g)\n\n        if (linksMatch) {\n          for (const linkMatch of linksMatch) {\n            const [, linkHref, linkText] = linkMatch.match(/\\[link=(.*?)](.*?)\\[\\/link\\]/)\n            lineToPrint = lineToPrint.replace(linkMatch, `<a class=\"${this.classNames.link}\" href=\"${linkHref}\" target=\"_blank\">${linkText}</a>`)\n          }\n        }\n\n        subline.innerHTML = lineToPrint\n      }\n    }\n\n    if (keyListener) {\n      document.body.removeEventListener('keyup', keyListener)\n      this.speedUpLazyPrint = false\n    }\n\n    this.busy = false\n  }\n\n  async printKeyDescriptionList(keyDescriptionList: KeyDescription[], minSpace = 3) {\n    const linesToPrint: string[] = []\n    let longestKeyLength = 0\n\n    for (const keyDescription of keyDescriptionList) {\n      if (keyDescription.key.length > longestKeyLength) {\n        longestKeyLength = keyDescription.key.length\n      }\n    }\n\n    for (const keyDescription of keyDescriptionList) {\n      const space = minSpace + (longestKeyLength - keyDescription.key.length)\n      linesToPrint.push(`${keyDescription.key}${new Array(space).fill('&nbsp;').join('')}${keyDescription.description}`)\n    }\n\n    await this.print(linesToPrint)\n  }\n\n  async input() {\n    this.currentActiveLine = this.createNewInputLine()\n\n    const keyUpListener = (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        const inputText = this.currentActiveLine.value\n        const subline = this.createNewSublineElement()\n\n        this.currentActiveLine.parentElement.classList.remove(this.classNames.lineUserInputActive)\n        subline.innerText = inputText\n        this.currentActiveLine.parentElement.appendChild(subline)\n    \n        this.currentActiveLine.removeEventListener('keyup', keyUpListener)\n        this.currentActiveLine.remove()\n\n        this.addToHistory(inputText)\n        this.resetHistoryActions()\n\n        if (inputText.trim()) {\n          this.executeInputHandlers(inputText)\n        } else {\n          this.input()\n        }\n      } else if (event.key === 'ArrowUp') {\n        this.goToPrevInHistory()\n      } else if (event.key === 'ArrowDown') {\n        this.goToNextInHistory()\n      } else {\n        this.histroyIndex = -1\n      }\n    }\n\n    this.currentActiveLine.addEventListener('keyup', keyUpListener)\n    this.currentActiveLine.focus()\n  }\n\n  question(question: string): Promise<string> {\n    const questionLine = `${question}: `\n    this.currentActiveLine = this.createNewInputLine()\n    this.currentActiveLine.value = questionLine\n\n    return new Promise((resolve) => {\n      const inputListener = () => {\n        if (this.currentActiveLine.value.length < questionLine.length) {\n          this.currentActiveLine.value = questionLine\n        }\n      }\n\n      const keyUpListener = (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          const inputText = this.currentActiveLine.value\n          const subline = this.createNewSublineElement()\n  \n          this.currentActiveLine.parentElement.classList.remove(this.classNames.lineUserInputActive)\n          subline.innerText = inputText\n          this.currentActiveLine.parentElement.appendChild(subline)\n      \n          this.currentActiveLine.removeEventListener('keyup', keyUpListener)\n          this.currentActiveLine.removeEventListener('input', inputListener)\n          this.currentActiveLine.remove()\n  \n          resolve(inputText.replace(questionLine, '').trim())\n        }\n      }\n\n      this.currentActiveLine.addEventListener('keyup', keyUpListener)\n      this.currentActiveLine.addEventListener('input', inputListener)\n      this.currentActiveLine.focus()\n    })\n  }\n\n  focus() {\n    if (this.currentActiveLine) {\n      this.currentActiveLine.focus()\n    }\n  }\n\n  onInput(callback: inputHandler) {\n    this.inputHandlers.push(callback)\n  }\n\n  private createClassNames(namespace: string) {\n    this.classNames = {\n      main: `${namespace}`,\n      line: `${namespace}__line`,\n      lineWithQuestion: `${namespace}__line--with-question`,\n      lineUserInput: `${namespace}__line--user-input`,\n      lineUserInputActive: `${namespace}__line--user-input-active`,\n      userInput: `${namespace}__user-input`,\n      subline: `${namespace}__subline`,\n      link: `${namespace}__link`,\n      question: `${namespace}__question`\n    }\n  }\n\n  private prepareMainElement() {\n    this.mainElement.classList.add(this.classNames.main)\n    this.mainElement.innerHTML = ''\n  }\n\n  private createNewLine(classModifier?: string): HTMLDivElement {\n    const line = document.createElement('div');\n\n    line.classList.add(this.classNames.line)\n\n    if (classModifier) {\n      line.classList.add(`${this.classNames.line}--${classModifier}`)\n    }\n\n    this.mainElement.appendChild(line)\n\n    return line\n  }\n\n  private createNewInputLine(): HTMLTextAreaElement {\n    const line = this.createNewLine()\n    const userInput = document.createElement('textarea')\n    userInput.spellcheck = false\n    userInput.autocapitalize = 'off'\n\n    line.classList.add(this.classNames.lineUserInput)\n    line.classList.add(this.classNames.lineUserInputActive)\n    userInput.classList.add(this.classNames.userInput)\n\n    line.appendChild(userInput)\n\n    return userInput\n  }\n\n  private createNewSublineElement(): HTMLElement {\n    const subline = document.createElement('span')\n    subline.classList.add(this.classNames.subline)\n\n    return subline\n  }\n\n  private async printLazy(element: Element, text: string, lazyPrintOptions: lazyPrintOptions) {\n    const options = lazyPrintOptions\n      ? lazyPrintOptions\n      : {pauseMaxTime: 70, pauseMinTime: 10}\n\n    const inTextPauses: {[position: number]: number} = {}\n    let match: null | RegExpMatchArray;\n\n    while ((match = text.match(/\\[\\d+]/)) !== null) {\n      inTextPauses[match.index] = Number(match[0].replace(/\\[|]/g, ''))\n      text = text.replace(match[0], '')\n    }\n\n    const textSplitted = text.split('')\n    let printedText = ''\n\n    for (let i = 0; i < textSplitted.length; i++) {\n      if (inTextPauses[i] && !this.speedUpLazyPrint) {\n        await sleep(inTextPauses[i])\n      }\n\n      if (!this.speedUpLazyPrint) {\n        const time = !objectHasOwnProperty(options, 'pauseMinTime')\n          ? options.pauseMaxTime \n          : Math.round((Math.random() * (options.pauseMaxTime - options.pauseMinTime)) + options.pauseMinTime)\n\n        await sleep(this.speedUpLazyPrint ? 0 : time)\n      }\n\n      printedText += textSplitted[i]\n      element.innerHTML = printedText\n    }\n  }\n\n  private executeInputHandlers(inputText: string) {\n    for (const inputHandler of this.inputHandlers) {\n      inputHandler(inputText)\n    }\n  }\n\n  private addToHistory(inputText: string) {\n    this.history.unshift(inputText.replace(/\\n$/, ''))\n  }\n\n  private goToPrevInHistory() {\n    if (this.history.length) {\n      if (this.histroyIndex < 0) {\n        this.beforeHistroyInput = this.currentActiveLine.value\n      }\n\n      if (this.histroyIndex + 1 < this.history.length) {\n        this.histroyIndex += 1\n        this.currentActiveLine.value = this.history[this.histroyIndex]\n      } else {\n        this.histroyIndex = -1\n        this.currentActiveLine.value = this.beforeHistroyInput\n      }\n    }\n\n    this.moveCursorAtTheEnd()\n  }\n\n  private goToNextInHistory() {\n    if (this.histroyIndex > -1) {\n      if (this.histroyIndex === 0) {\n        this.histroyIndex = -1\n        this.currentActiveLine.value = this.beforeHistroyInput\n      } else {\n        this.histroyIndex -= 1\n        this.currentActiveLine.value = this.history[this.histroyIndex]\n      }\n    }\n\n    this.moveCursorAtTheEnd()\n  }\n\n  private moveCursorAtTheEnd() {\n    const valueLength = this.currentActiveLine.value.length\n    this.currentActiveLine.setSelectionRange(valueLength, valueLength)\n  }\n\n  private resetHistoryActions() {\n    this.histroyIndex = -1\n    this.beforeHistroyInput = ''\n  }\n}\n\nexport default Conzole","import I18n from './I18n'\n\ninterface PropsList {\n  [prop: string]: string | number | boolean\n}\n\ninterface ProgramConfig {\n  mainCommand: string,\n  description?: string,\n  hidden?: boolean,\n  i18n: I18n,\n  propsConfig?: PropsConfig\n}\ninterface PropsConfig {\n  [prop: string]: {\n    type:  PropType,\n    default?: string | number | boolean\n  }\n}\n\ninterface DataObject {\n  print?: Print | PrintLazy | PrintKeyDescription | (Print | PrintLazy | PrintKeyDescription)[]\n}\n\ninterface Print {\n  type: 'print',\n  output: string | string[]\n}\n\ninterface PrintLazy {\n  type: 'printLazy',\n  output: string\n}\n\ninterface PrintKeyDescription {\n  type: 'printKeyDescription',\n  output: {key: string, description: string}[]\n}\n\ntype PropType = 'string' | 'number' | 'boolean'\n\ntype Run = (propsString: string) => Promise<RunResult>\n\ntype RunCallback = (propsList: PropsList) => Promise<RunResult>\n\ntype RunResult = {\n  err?: string,\n  data?: DataObject,\n  question?: {\n    text: string\n    callback: (input: string) => RunResult\n  }\n}\n\nclass Program {\n  protected mainCommand: string\n  protected description: string\n  protected hidden = false\n  protected i18n: I18n\n  private propsConfig: PropsConfig\n\n  constructor(config: ProgramConfig) {\n    this.mainCommand = config.mainCommand\n    this.i18n = config.i18n\n    this.description = config.description || 'some program, not sure what it\\'s doing...'\n    this.hidden = config.hidden || !config.description\n    this.propsConfig = config.propsConfig || {}\n  }\n\n  getMainCommand(): string {\n    return this.mainCommand\n  }\n\n  isHidden(): boolean {\n    return this.hidden\n  }\n\n  getDescription(): string {\n    return this.description\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.forgotAboutIt')\n      }\n    }\n  }\n\n  \n\n  async run(propsString: string): Promise<RunResult> {\n    const propsList = this.createPropsFromString(propsString)\n    const propsValidationResult = this.validateProps(propsList)\n    \n    if (propsValidationResult) {\n      return {err: propsValidationResult}\n    }\n\n    return await this.runCallback(propsList)\n  }\n\n  protected async runCallback(propsList: PropsList): Promise<RunResult> {\n    return {err: null, data: {print: {type: 'print', output: `Provided props?: ${!!propsList}`}}}\n  }\n\n  private createPropsFromString(propsString: string): PropsList {\n    return propsString\n      .replace(/\\n.*/g, '')\n      .split(' ')\n      .filter(string => !!string.trim().length)\n      .reduce((propsArray: string[][], currentElement: string) => {\n        if (currentElement.match(/^--/)) {\n          const splittedProp = currentElement.replace(/^--/, '').split('=')\n          const propsSubArray = [splittedProp[0].toLocaleLowerCase()]\n\n          if (splittedProp.length > 1) {\n            propsSubArray.push(splittedProp[1])\n          }\n\n          propsArray.push(propsSubArray)\n        } else if (propsArray.length && propsArray[propsArray.length - 1] && propsArray[propsArray.length - 1].length < 2) {\n          propsArray[propsArray.length - 1].push(currentElement)\n        }\n\n        return propsArray\n      }, [])\n      .reduce((propsList: PropsList, currentArgSubArray: string[]) => {\n        if (currentArgSubArray.length) {\n          if (currentArgSubArray.length === 1) {\n            propsList[currentArgSubArray[0].replace(/^no-/, '')] = !currentArgSubArray[0].match(/^no-/)\n          } else if (currentArgSubArray.length === 2) {\n            let numberValue: number\n\n            if (currentArgSubArray[1] === 'false' || currentArgSubArray[1] === 'true') {\n              propsList[currentArgSubArray[0]] = currentArgSubArray[1] === 'false' ? false : true\n            } else if ((numberValue = Number(currentArgSubArray[1])) && !isNaN(numberValue)) {\n              propsList[currentArgSubArray[0]] = numberValue\n            } else {\n              propsList[currentArgSubArray[0]] = currentArgSubArray[1]\n            }\n          }\n        }\n\n        return propsList\n      }, {})\n  }\n\n  private validateProps(propsList: PropsList): string | null {\n    let validationResult: string | null = null\n\n    for (const prop in propsList) {\n      if (!this.propsConfig[prop]) {\n        validationResult = `Unknown property '${prop}'`\n        break\n      }\n\n      if (typeof propsList[prop] !== this.propsConfig[prop].type) {\n        validationResult = `Property '${prop}' has wrong type. Expected ${this.propsConfig[prop].type}, got ${typeof propsList[prop]}.`\n        break\n      }\n    }\n    \n    return validationResult\n  }\n}\n\nexport default Program\n\nexport {\n  PropsList,\n  ProgramConfig,\n  DataObject,\n  RunResult,\n  RunCallback,\n  Run\n}","const optionsManager = {\n  setInitialLang(): string {\n    const lang = localStorage.getItem('lang') || 'en'\n    return lang\n  },\n  setInitialTheme(): string {\n    const themeClass = localStorage.getItem('themeClass') || 'theme-dark'\n    this.setTheme(themeClass)\n    return themeClass\n  },\n  saveLang(lang: string) {\n    localStorage.setItem('lang', lang)\n  },\n  saveTheme(themeClass: string) {\n    localStorage.setItem('themeClass', themeClass)   \n    this.setTheme(themeClass) \n  },\n  setTheme(themeClass: string) {\n    const body = document.body\n\n    if (body.className.match(/theme-.+?(\\s|$)/)) {\n      body.className = body.className.replace(/theme-.+?(\\s|$)/, `${themeClass}$1`)\n    } else {\n      body.classList.add(themeClass)\n    }\n  }\n}\n\nexport default optionsManager","import Program, { DataObject, RunResult } from \"./Program\";\nimport I18n from './I18n'\nimport optionsManager from './OptionsManager'\n\ninterface ThemesList {\n  [name: string]: string\n}\n\ninterface LanguagesList {\n  [name: string]: string\n}\n\ninterface OptionsPropsList {\n  theme?: string,\n  lang?: string\n}\n\nclass OptionsProgram extends Program {\n  private themes: ThemesList = {\n    light: 'theme-light',\n    dark: 'theme-dark'\n  }\n\n  private langs: LanguagesList = {\n    en: 'en',\n    pl: 'pl'\n  }\n\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'options',\n      description: i18n.key('help.optionsProgram.description'),\n      i18n,\n      propsConfig: {\n        theme: {\n          type: 'string'\n        },\n        lang: {\n          type: 'string'\n        }\n      }\n    })\n  }\n\n  help(): DataObject {\n    return {\n      print: [\n        {type: 'print', output: this.i18n.key('help.optionsProgram.title', this.mainCommand)},\n        {type: 'printKeyDescription', output: [\n          {\n            key: `${this.mainCommand} --theme [${this.i18n.key('help.optionsProgram.themeName')}]`,\n            description: this.i18n.key('help.optionsProgram.themeOptionDescription')\n          },\n          {\n            key: `${this.mainCommand} --lang [${this.i18n.key('help.optionsProgram.languageCode')}]`,\n            description: this.i18n.key('help.optionsProgram.langOptionDescription')\n          }\n        ]}\n      ]\n    }\n  }\n\n  protected async runCallback(propsList: OptionsPropsList): Promise<RunResult> {\n    if (propsList.theme || propsList.lang) {\n      \n      if (propsList.theme) {\n        const changeThemeError = this.changeTheme(propsList.theme)\n\n        if (changeThemeError) {\n          return {\n            err: changeThemeError\n          }\n        }\n      }\n\n      if (propsList.lang) {\n        const changeLangError = this.changeLang(propsList.lang)\n\n        if (changeLangError) {\n          return {\n            err: changeLangError\n          }\n        } else {\n          return {\n            question: {\n              text: this.i18n.key('options.resetToChangeLang'),\n              callback: (answer: string) => {\n                if (!answer || answer.toLocaleLowerCase() === 'y' || answer.toLocaleLowerCase() === 't') {\n                  // eslint-disable-next-line\n                  window.location.href = window.location.href\n                  return {}\n                }\n\n                return {}\n              }\n            }\n          }\n        }\n      }\n    } else {\n      return {err: this.i18n.key('options.noPropsError')}\n    }\n\n    return {}\n  }\n\n  private changeTheme(theme: string): null | string {\n    if (this.themes[theme]) {\n      optionsManager.saveTheme(this.themes[theme])\n      return null\n    }\n\n    return this.i18n.key('options.unknownThemeError', [theme, Object.keys(this.themes).join(', ')])\n  }\n\n  private changeLang(lang: string): null | string {\n    if (this.langs[lang]) {\n      optionsManager.saveLang(this.langs[lang])\n      return null\n    }\n\n    return this.i18n.key('options.unknownLangError', [lang, Object.keys(this.langs).join(', ')])\n  }\n}\n\nexport default OptionsProgram","import Program, { DataObject, RunResult } from \"./Program\";\nimport I18n from './I18n'\nimport Dialog from './Dialog'\nimport mkInfoImg from './assets/mk_info_img.jpeg'\n\n\nclass AboutProgram extends Program {\n  private classNames = {\n    main: 'about',\n    image: 'about__image',\n    text: 'about__text'\n  }\n\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'about',\n      description: i18n.key('help.aboutProgram.description'),\n      i18n\n    })\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.aboutProgram.detailedDescription')\n      }\n    }\n  }\n\n  protected async runCallback(): Promise<RunResult> {\n    const dialog = new Dialog(\n      this.getContent(),\n      {\n        name: 'About',\n        width: 600,\n        buttonOk: this.i18n.key('button.close')\n      }\n    )\n    await dialog.open()\n    return {err: null}\n  }\n\n  private getContent(): HTMLDivElement {\n    const mainWrapper = document.createElement('div')\n    mainWrapper.classList.add(this.classNames.main)\n\n    const image = document.createElement('img')\n    image.classList.add(this.classNames.image)\n    image.src = mkInfoImg\n\n    const text = document.createElement('p')\n    text.classList.add(this.classNames.text)\n    text.innerText = this.i18n.key('about.text')\n\n    mainWrapper.appendChild(image)\n    mainWrapper.appendChild(text)\n\n    return mainWrapper\n  }\n}\n\nexport default AboutProgram","interface DialogConfig {\n  name: string,\n  buttonOk: string,\n  buttonNo?: string,\n  width: number,\n  height?: number,\n  showClose: boolean\n}\n\ninterface DialogConfigArgument {\n  name?: string\n  buttonOk?: string,\n  buttonNo?: string,\n  width?: number,\n  height?: number,\n  showClose?: boolean\n}\n\nclass Dialog {\n  private mainElement: HTMLElement\n  private buttonOk: HTMLButtonElement\n  private buttonNo: HTMLButtonElement | undefined\n  private dialogClose: HTMLButtonElement | undefined\n  private config: DialogConfig\n\n  private classNames = {\n    main: 'dialog',\n    dialogWindow: 'dialog__window',\n    dialogHeader: 'dialog__header',\n    dialogName: 'dialog__name',\n    dialogClose: 'dialog__close',\n    dialogContent: 'dialog__content',\n    dialogContentDefault: 'dialog__content--default',\n    dialogButtons: 'dialog__buttons',\n    dialogButtonsMulti: 'dialog__buttons--multi',\n    dialogButton: 'dialog__button',\n    dialogButtonOk: 'dialog__button--ok',\n    dialogButtonNo: 'dialog__button--no'\n  }\n\n  constructor(slot: string | HTMLElement, config?: DialogConfigArgument) {\n    this.config = {\n      name: 'Dialog',\n      buttonOk: 'OK',\n      width: 400,\n      showClose: true,\n      ...(config ? config : {})\n    }\n\n    this.mainElement = document.createElement('div')\n    this.mainElement.classList.add(this.classNames.main)\n    \n    const dialogWindow = document.createElement('div')\n    dialogWindow.classList.add(this.classNames.dialogWindow)\n    dialogWindow.style.width = `${this.config.width}px`\n    if (this.config.height) {\n      dialogWindow.style.minHeight = `${this.config.height}px`\n    }\n    this.mainElement.appendChild(dialogWindow)\n\n    const dialogHeader = document.createElement('div')\n    dialogHeader.classList.add(this.classNames.dialogHeader)\n\n    const dialogName = document.createElement('span')\n    dialogName.classList.add(this.classNames.dialogName)\n    dialogName.innerHTML = this.config.name\n    dialogHeader.appendChild(dialogName)\n\n    if (this.config.showClose) {\n      this.dialogClose = document.createElement('button')\n      this.dialogClose.classList.add(this.classNames.dialogClose)\n      dialogHeader.appendChild(this.dialogClose)\n    }    \n\n    dialogWindow.appendChild(dialogHeader)\n\n    const dialogContent = document.createElement('div')\n    dialogContent.classList.add(this.classNames.dialogContent)\n    \n    if (typeof slot === 'string') {\n      dialogContent.innerText = slot\n      dialogContent.classList.add(this.classNames.dialogContentDefault)\n    } else {\n      dialogContent.appendChild(slot)\n    }\n\n    dialogWindow.appendChild(dialogContent)\n    \n    \n    const buttonsWrapper = document.createElement('div')\n    buttonsWrapper.classList.add(this.classNames.dialogButtons)\n\n    if (this.config.buttonNo) {\n      this.buttonNo = document.createElement('button')\n      this.buttonNo.classList.add(this.classNames.dialogButton, this.classNames.dialogButtonNo)\n      this.buttonNo.innerText = this.config.buttonNo\n      buttonsWrapper.appendChild(this.buttonNo)\n      buttonsWrapper.classList.add(this.classNames.dialogButtonsMulti)\n    }\n    \n    this.buttonOk = document.createElement('button')\n    this.buttonOk.classList.add(this.classNames.dialogButton, this.classNames.dialogButtonOk)\n    this.buttonOk.innerText = this.config.buttonOk\n\n    buttonsWrapper.appendChild(this.buttonOk)\n\n    dialogWindow.appendChild(buttonsWrapper)\n  }\n\n  open(): Promise<boolean> {\n    document.body.appendChild(this.mainElement)\n\n    return new Promise(resolve => {\n      let noListener: () => void | undefined;\n      let closeListener: () => void | undefined\n\n      const okListener = () => {\n        this.buttonOk.removeEventListener('click', okListener)\n        document.body.removeEventListener('keyup', escListener)\n        \n        if (this.buttonNo && noListener !== undefined) {\n          this.buttonNo.removeEventListener('click', noListener)\n        }\n\n        if (this.dialogClose && closeListener !== undefined) {\n          this.dialogClose.removeEventListener('click', closeListener)\n        }\n\n        this.close()\n\n        resolve(true)\n      }\n\n      this.buttonOk.addEventListener('click', okListener)\n\n      const escListener = (event: KeyboardEvent) => {\n        if (event.key.toLocaleLowerCase() === 'escape') {\n          okListener()\n        }\n      }\n\n      document.body.addEventListener('keyup', escListener)\n\n      if (this.config.showClose && this.dialogClose) {\n        closeListener = () => {\n          this.dialogClose.removeEventListener('click', closeListener)\n          this.buttonOk.removeEventListener('click', okListener)\n          document.body.removeEventListener('keyup', escListener)\n\n          if (this.buttonNo && noListener !== undefined) {\n            this.buttonNo.removeEventListener('click', noListener)\n          }\n\n          this.close();\n\n          resolve(true)\n        }\n\n        this.dialogClose.addEventListener('click', closeListener)\n      }\n\n      if (this.buttonNo) {\n        noListener = () => {\n          this.buttonNo.removeEventListener('click', noListener)\n          this.buttonOk.removeEventListener('click', okListener)\n          document.body.removeEventListener('keyup', escListener)\n\n          if (this.dialogClose && closeListener !== undefined) {\n            this.dialogClose.removeEventListener('click', closeListener)\n          }\n\n          this.close()\n\n          resolve(false)\n        }\n\n        this.buttonNo.addEventListener('click', noListener)\n      }\n    })\n  }\n\n  close() {\n    this.mainElement.remove()\n  }\n}\n\nexport default Dialog","import Program, {DataObject, RunResult} from './Program'\nimport I18n from './I18n'\n\nclass LinksProgram extends Program {\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'links',\n      description: i18n.key('help.linksProgram.description'),\n      i18n\n    })\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.linksProgram.detailedDescription')\n      }\n    }\n  }\n\n  protected async runCallback(): Promise<RunResult> {\n    const links = [\n      {\n        key: 'linkedin:',\n        description: '[link=https://www.linkedin.com/in/mihauco]linkedin.com/in/mihauco[/link]'\n      },\n      {\n        key: 'twitter:',\n        description: '[link=https://twitter.com/mihauco]twitter.com/mihauco[/link]'\n      },\n      {\n        key: 'github:',\n        description: '[link=https://github.com/mihauco]github.com/mihauco[/link]'\n      }\n    ]\n\n    return {err: null, data: {print: {type: 'printKeyDescription', output: links}}}\n  }\n}\n\nexport default LinksProgram","import Program, { DataObject, RunResult } from \"./Program\";\nimport I18n from './I18n'\n\nclass EloRapProgram extends Program {\n  private rapList: string[] = [\n    'https://www.youtube.com/watch?v=F86i8gPgquI',\n    'https://www.youtube.com/watch?v=GbAHs3Bs8I4',\n    'https://www.youtube.com/watch?v=H30R1BUpRF8',\n    'https://www.youtube.com/watch?v=DDZFSRBCSdo'\n  ]\n\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'elorap',\n      i18n\n    })\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.elorapProgram.detailedDescription')\n      }\n    }\n  }\n\n  protected async runCallback(): Promise<RunResult> {\n    const randomIndex = Math.round(Math.random() * (this.rapList.length - 1))\n\n    return {\n      data: {\n        print: {\n          type: 'print',\n          output: this.i18n.key('elorap.text1', this.rapList[randomIndex])\n        }\n      }\n    }\n  }\n}\n\nexport default EloRapProgram","import Program, { PropsList, DataObject, RunResult } from './Program'\nimport I18n from './I18n'\n\nclass HelpProgram extends Program {\n  private programInstances: Program[]\n\n  constructor(i18n: I18n, programInstances: Program[]) {\n    super({\n      mainCommand: 'help',\n      i18n,\n      propsConfig: {\n        command: {\n          type: 'string'\n        }\n      }\n    })\n\n    this.programInstances = programInstances\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.helpProgramDescription')\n      }\n    }\n  }\n\n  protected async runCallback(propsList: PropsList): Promise<RunResult> {\n    if (propsList.command && typeof propsList.command === 'string') {\n      const commandHelpPrintData = this.getCommandHelpPrintData(propsList.command)\n\n      return {\n        err: null,\n        data: commandHelpPrintData\n      }\n    }\n\n    const list = [\n      {\n        key: this.i18n.key('help.list.commandHeader'),\n        description: this.i18n.key('help.list.descriptionHeader')\n      }\n    ]\n\n    list.push({\n      key: new Array(list[0].key.length).fill('-').join(''),\n      description: new Array(list[0].description.length).fill('-').join('')\n    })\n\n    for (const program of this.programInstances) {\n      if (!program.isHidden()) {\n        list.push({\n          key: program.getMainCommand(),\n          description: program.getDescription()\n        })\n      }\n    }\n\n    return {\n      err: null,\n      data: {\n        print: [\n          {type: 'printKeyDescription', output: list},\n          {type: 'print', output: ''},\n          {type: 'print', output: this.i18n.key('help.additionalInfro')}\n        ]\n      }\n    }\n  }\n\n  private getCommandHelpPrintData(commandName: string): DataObject {\n    const programInstance = this.programInstances.find(instance => instance.getMainCommand() === commandName)\n\n    if (programInstance) {\n      return programInstance.help()\n    }\n\n    return {print: {type: 'print', output: this.i18n.key('help.commandDoNotExist', commandName)}}\n  }\n}\n\nexport default HelpProgram","import Program, {DataObject, RunResult} from './Program'\nimport I18n from './I18n'\nimport CVpdf from './assets/michal_koczkodon_cv_06-Nov-2022.pdf'\n\nclass CVProgram extends Program {\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'cv',\n      description: i18n.key('help.cvProgram.description'),\n      i18n\n    })\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.cvProgram.detailedDescription')\n      }\n    }\n  }\n\n  protected async runCallback(): Promise<RunResult> {\n    return {\n      data: {\n        print: {\n          type: 'print',\n          output: this.i18n.key('help.cvProgram.downloadInfo')\n        }\n      },\n      question: {\n        text: this.i18n.key('help.cvProgram.downloadProceed'),\n        callback: () => {\n          this.downloadCV()\n          return {}\n        }\n      }\n    }\n  }\n\n  private downloadCV() {\n    const link = document.createElement('a')\n    link.style.display = 'none'\n    link.target=\"_blank\"\n    link.href = CVpdf\n    link.download = \"michal_koczkodon_cv_06-Nov-2022.pdf\"\n\n    document.body.appendChild(link)\n    link.click()\n\n    setTimeout(() => {\n      link.remove()\n    }, 100)\n  }\n}\n\nexport default CVProgram\n\n","import Program, {DataObject, RunResult} from './Program'\nimport I18n from './I18n'\nimport changelog from '../changelog.md'\n\nclass ChangeLogProgram extends Program {\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'changelog',\n      description: i18n.key('help.changelog.description'),\n      i18n\n    })\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.changelog.detailedDescription')\n      }\n    }\n  }\n\n  protected async runCallback(): Promise<RunResult> {\n    return {\n      data: {\n        print: {\n          type: 'print',\n          output: this.getFormattedChangelog()\n        }\n      }\n    }\n  }\n\n  /*\n    TODO:\n    This method is a mess, make it better \n  */\n  private getFormattedChangelog(): string[] {\n    const linksMatch = changelog.match(/\\[\\d.\\d.\\d\\]:.+/gm)\n\n    const versionLinks: {[version: string]: string} = Array.isArray(linksMatch)\n      ? linksMatch.reduce((linksAgg: {[version: string]: string}, linkLine) => {\n        if (typeof linkLine === 'string') {\n          const lineSplitted = linkLine.split(': ')\n\n          if (lineSplitted.length === 2) {\n            linksAgg[lineSplitted[0]] = lineSplitted[1]\n          }\n        }\n\n        return linksAgg\n      }, {})\n      : {}\n    \n    const changelogInLines = changelog.replace(/\\[\\d.\\d.\\d\\]:.+/gm, '')\n      .replace(/\\n/g, '<nl>')\n      .replace(/^#.+?#/, '#')\n      .replace(/#{1,}/g, '')\n      .split('<nl>')\n      .filter(line => line.trim())\n      .map((line, index) => {\n        line = line.trim()\n        const versionMatch = line.match(/\\[\\d.\\d.\\d\\]/)\n\n        if (versionMatch && versionLinks[versionMatch[0]]) {\n          line = line.replace(\n            /\\[\\d.\\d.\\d\\]/,\n            `[link=${versionLinks[versionMatch[0]]}]${versionMatch[0].replace(/\\[|\\]/g, '')}[/link]`\n          )\n        }\n\n        if (line.match(/^[a-zA-Z]/)) {\n          line = `&nbsp;&nbsp;${line}`\n        } else if (line.match(/^-/)) {\n          line = `&nbsp;&nbsp;&nbsp;&nbsp;${line}`\n        } else if (index > 0) {\n          line = `<br/>${line}`\n        }\n\n        return line\n      })\n\n    return changelogInLines\n  }\n}\n\nexport default ChangeLogProgram","import Program, {DataObject, RunResult} from './Program'\nimport I18n from './I18n'\n\nclass RepoProgram extends Program {\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'repo',\n      description: i18n.key('help.repo.description'),\n      i18n\n    })\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.repo.detailedDescription')\n      }\n    }\n  }\n\n  protected async runCallback(): Promise<RunResult> {\n    window.open('https://github.com/mihauco/mihauco.github.io', '_blank')\n\n    return {\n      data: {\n        print: {\n          type: 'print',\n          output: this.i18n.key('repo.didnOpenMessage', 'https://github.com/mihauco/mihauco.github.io')\n        }\n      }\n    }\n  }\n}\n\nexport default RepoProgram","import './index.scss'\nimport MKInfo from './MKInfo'\n\nconst mainEl: HTMLElement = document.querySelector('#mk-info')\nnew MKInfo(mainEl).start()\n","import Conzole from './Conzole'\nimport I18n from './i18n'\nimport logo from './logo'\nimport translations from './translations.json'\nimport Program from './Program'\nimport OptionsProgram from './OptionsProgram'\nimport AboutProgram from './AboutProgram'\nimport LinksProgram from './LinksProgram'\nimport EloRapProgram from './EloRapProgram'\nimport HelpProgram from './HelpProgram'\nimport CVProgram from './CVProgram'\nimport ChangeLogProgram from './ChangeLogProgram'\nimport RepoProgram from './RepoProgram'\nimport optionsManager from './OptionsManager'\nimport { isMobile } from './helpers/helpers'\nimport packagejson from '../package.json'\n\nclass MKInfo {\n  private mainEl: HTMLElement\n  private conzole: Conzole\n  private i18n: I18n\n  private lang: string\n  private programs: Program[]\n\n  constructor(mainEl: HTMLElement) {\n    optionsManager.setInitialTheme()\n    this.mainEl = mainEl\n    this.mainEl.innerHTML = ''\n    this.conzole = new Conzole(this.mainEl, 'mk-info')\n    this.lang = this.getLang()\n    this.i18n = new I18n(translations, this.lang, 'en')\n    this.programs = [\n      new OptionsProgram(this.i18n),\n      new AboutProgram(this.i18n),\n      new LinksProgram(this.i18n),\n      new EloRapProgram(this.i18n),\n      new CVProgram(this.i18n),\n      new ChangeLogProgram(this.i18n),\n      new RepoProgram(this.i18n)\n    ]\n    \n    this.programs.push(\n      new HelpProgram(this.i18n, this.programs)\n    )\n  }\n\n  async start() {\n    await this.printLogo()\n    await this.conzole.print('')\n    await this.printHelloMessage()\n\n    this.bindInputEvents()\n    this.bindAutoFocusToActiveLineEvent()\n\n    this.conzole.input()\n  }\n\n  bindAutoFocusToActiveLineEvent() {\n    document.body.addEventListener('click', () => {\n      this.conzole.focus()\n    })\n  }\n\n  private getLang(): string {\n    return optionsManager.setInitialLang()\n  }\n\n  private async printLogo() {\n    const logoLines = logo.split('\\n').filter(line => !!line.length)\n    let belowLogoInfo: string | string[] = `v${packagejson.version}|© 2022 Michal Koczkodon`\n    let longestLogoLine = -1\n\n    for (const line of logoLines) {\n      if (line.length > longestLogoLine) longestLogoLine = line.length\n    }\n\n    await this.conzole.print(logoLines, {pauseMaxTime: 3}, 'logo')\n\n    const belowLogoInfoSpaceLength = longestLogoLine - belowLogoInfo.length + 1\n\n    if (belowLogoInfoSpaceLength > 0) {\n      belowLogoInfo = belowLogoInfo.replace('|', new Array(belowLogoInfoSpaceLength).fill('&nbsp;').join(''))\n    } else {\n      belowLogoInfo.split('|')\n    }\n\n    await this.conzole.print(belowLogoInfo, false, 'app-info')\n  }\n\n  private async printHelloMessage() {\n    const helloMessage = [\n      this.i18n.key('helloText'),\n      ...(isMobile() ? [this.i18n.key('helloMobileText')] : []),\n      this.i18n.key('helloHelpInfo')\n    ]\n  \n    await this.conzole.print(helloMessage, true)\n  }\n\n  private bindInputEvents() {\n    this.conzole.onInput(async (inputText) => {\n      const mainCommand = inputText.trim().match(/^.+?(\\s|$)/)[0]?.trim() || '';\n      const programToRun = this.programs.find(program => program.getMainCommand() === mainCommand)\n\n      if (programToRun) {\n        await this.runProgram(programToRun, inputText)\n      } else {\n        await this.conzole.print(this.i18n.key('unknownProgram', mainCommand))\n      }\n\n      this.conzole.input()\n    })\n  }\n\n  private async runProgram(program: Program, input: string) {\n    let run = true\n    let result = await program.run(input.replace(/^.+?(\\s|$)/, ''))\n    \n    while (run) {\n      if (!result.question) {\n        run = false\n      }\n\n      if (result.err) {\n        await this.conzole.print(result.err)\n      }\n  \n      if (result.data) {\n        if (typeof result.data === 'string') {\n          await this.conzole.print(result.data)\n        } else {\n          if (result.data.print) {\n            const printDataArray = Array.isArray(result.data.print) ? result.data.print : [result.data.print]\n  \n            for (const printData of printDataArray) {\n              if (printData.type === 'printLazy') {\n                await this.conzole.print(printData.output, true)\n              } else if (printData.type === 'printKeyDescription') {\n                await this.conzole.printKeyDescriptionList(printData.output)\n              } else {\n                await this.conzole.print(printData.output)\n              }\n            }\n          }\n        }\n      }\n\n      if (result.question) {\n        const response = await this.conzole.question(result.question.text)\n        result = result.question.callback(response)\n      }\n    }\n  }\n}\n\nexport default MKInfo","interface Translations {\n  [key: string]: {\n    [lang: string]: string\n  }\n}\n\ntype Replacements = string | string[] | {[replacementKey: string]: string}\n\nclass I18n {\n  private translations: Translations\n  private lang: string\n  private fallback: string\n\n  constructor(translations: Translations, initLang: string, fallback?: string) {\n    this.translations = translations\n    this.lang = initLang\n    this.fallback = fallback || initLang\n  }\n\n  setLang(lang: string) {\n    this.lang = lang\n  }\n\n  key(key: string, replacements?: Replacements): string {\n    if (this.translations[key]) {\n      let translation = this.translations[key][this.lang] || this.translations[key][this.fallback] || undefined\n\n      if (typeof translation === 'string') {\n        if (replacements) {\n          const replacementsObject: {[key: string]: string} = {}\n\n          if (typeof replacements === 'string') {\n            replacementsObject['0'] = replacements\n          } else if (Array.isArray(replacements)) {\n            for (const index in replacements) {\n              replacementsObject[`${index}`] = replacements[index]\n            }\n          } else if (typeof replacements === 'object') {\n            for (const key in replacements) {\n              replacementsObject[`${key}`] = replacements[key]\n            }\n          }\n\n          for (const key in replacementsObject) {\n            translation = translation.replaceAll('${' + key + '}', replacementsObject[key])\n          }\n        }\n\n        return translation\n      }\n    }\n\n    return key\n  }\n}\n\nexport default I18n\n\n\n\n","const logo = `\n███╗░░░███╗██╗██╗░░██╗░█████╗░██╗░░░██╗░░░░█████╗░░█████╗░\n████╗░████║██║██║░░██║██╔══██╗██║░░░██║░░░██╔══██╗██╔══██╗\n██╔████╔██║██║███████║███████║██║░░░██║░░░██║░░╚═╝██║░░██║\n██║╚██╔╝██║██║██╔══██║██╔══██║██║░░░██║░░░██║░░██╗██║░░██║\n██║░╚═╝░██║██║██║░░██║██║░░██║╚██████╔╝██╗╚█████╔╝╚█████╔╝\n╚═╝░░░░░╚═╝╚═╝╚═╝░░╚═╝╚═╝░░╚═╝░╚═════╝░╚═╝░╚════╝░░╚════╝░\n`\n\nexport default logo"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","sleep","time","Promise","resolve","setTimeout","constructor","config","hidden","mainCommand","i18n","description","propsConfig","getMainCommand","isHidden","getDescription","help","print","type","output","key","run","propsString","propsList","createPropsFromString","propsValidationResult","validateProps","err","runCallback","data","split","filter","string","trim","reduce","propsArray","currentElement","match","splittedProp","propsSubArray","toLocaleLowerCase","push","currentArgSubArray","numberValue","Number","isNaN","validationResult","prop","setInitialLang","localStorage","getItem","setInitialTheme","themeClass","setTheme","saveLang","lang","setItem","saveTheme","body","className","classList","add","super","theme","themes","light","dark","langs","en","pl","changeThemeError","changeTheme","changeLangError","changeLang","question","text","callback","answer","href","Object","keys","join","classNames","main","image","dialog","slot","dialogWindow","dialogHeader","dialogName","dialogClose","dialogContent","dialogContentDefault","dialogButtons","dialogButtonsMulti","dialogButton","dialogButtonOk","dialogButtonNo","name","buttonOk","width","showClose","mainElement","createElement","style","height","minHeight","appendChild","innerHTML","innerText","buttonsWrapper","buttonNo","open","noListener","closeListener","okListener","removeEventListener","escListener","close","addEventListener","event","remove","getContent","mainWrapper","rapList","randomIndex","Math","round","random","programInstances","command","getCommandHelpPrintData","list","Array","fill","program","commandName","programInstance","find","instance","downloadCV","link","display","target","download","click","getFormattedChangelog","linksMatch","changelog","versionLinks","isArray","linksAgg","linkLine","lineSplitted","line","map","index","versionMatch","mainEl","conzole","el","namespace","busy","inputHandlers","history","histroyIndex","beforeHistroyInput","currentActiveLine","speedUpLazyPrint","createClassNames","prepareMainElement","lazy","classModifier","createNewLine","linesToPrint","keyListener","lineToPrint","subline","createNewSublineElement","printLazy","linkMatch","linkHref","linkText","printKeyDescriptionList","keyDescriptionList","minSpace","longestKeyLength","keyDescription","space","input","createNewInputLine","keyUpListener","inputText","value","parentElement","lineUserInputActive","addToHistory","resetHistoryActions","executeInputHandlers","goToPrevInHistory","goToNextInHistory","focus","questionLine","inputListener","onInput","lineWithQuestion","lineUserInput","userInput","spellcheck","autocapitalize","element","lazyPrintOptions","options","pauseMaxTime","pauseMinTime","inTextPauses","textSplitted","printedText","i","object","prototype","hasOwnProperty","call","inputHandler","unshift","moveCursorAtTheEnd","valueLength","setSelectionRange","getLang","translations","initLang","fallback","setLang","replacements","translation","replacementsObject","replaceAll","programs","start","printLogo","printHelloMessage","bindInputEvents","bindAutoFocusToActiveLineEvent","logoLines","belowLogoInfo","longestLogoLine","belowLogoInfoSpaceLength","helloMessage","innerWidth","programToRun","runProgram","result","printDataArray","printData","response","querySelector"],"sourceRoot":""}