{"version":3,"file":"mkinfo.js","mappings":"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","sources":["webpack://mk-info/webpack/bootstrap","webpack://mk-info/webpack/runtime/global","webpack://mk-info/webpack/runtime/publicPath","webpack://mk-info/./src/helpers.ts","webpack://mk-info/./src/Conzole.ts","webpack://mk-info/./src/Program.ts","webpack://mk-info/./src/OptionsManager.ts","webpack://mk-info/./src/OptionsProgram.ts","webpack://mk-info/./src/AboutProgram.ts","webpack://mk-info/./src/Dialog.ts","webpack://mk-info/./src/LinksProgram.ts","webpack://mk-info/./src/EloRapProgram.ts","webpack://mk-info/./src/HelpProgram.ts","webpack://mk-info/./src/CVProgram.ts","webpack://mk-info/./src/index.ts","webpack://mk-info/./src/MKInfo.ts","webpack://mk-info/./src/i18n.ts","webpack://mk-info/./src/logo.ts","webpack://mk-info/./src/helpers/helpers.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","function sleep(time: number): Promise<number> {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(time)\n    }, time)\n  })\n}\n\nexport {\n  sleep\n}","import {sleep} from './helpers'\n\ninterface ClassNames {\n  main: string,\n  line: string,\n  lineWithQuestion: string,\n  lineUserInput: string,\n  lineUserInputActive: string,\n  userInput: string,\n  subline: string,\n  link: string,\n  question: string\n}\n\ntype inputHandler = (inputText: string) => void\n\ninterface lazyPrintOptions {\n  pauseMaxTime: number,\n  pauseMinTime?: number\n}\n\ninterface KeyDescription {\n  key: string,\n  description: string\n}\n\nclass Conzole {\n  private mainElement: HTMLElement\n  private classNames: ClassNames\n  private busy: boolean = false\n  private inputHandlers: inputHandler[] = []\n  private history: string[] = []\n  private histroyIndex: number = -1\n  private beforeHistroyInput: string = ''\n  private currentActiveLine: HTMLTextAreaElement | null = null\n\n  constructor(el: HTMLElement, namespace: string = 'conzole') {\n    this.mainElement = el\n    this.createClassNames(namespace)\n    this.prepareMainElement()\n  }\n\n  private createClassNames(namespace: string) {\n    this.classNames = {\n      main: `${namespace}`,\n      line: `${namespace}__line`,\n      lineWithQuestion: `${namespace}__line--with-question`,\n      lineUserInput: `${namespace}__line--user-input`,\n      lineUserInputActive: `${namespace}__line--user-input-active`,\n      userInput: `${namespace}__user-input`,\n      subline: `${namespace}__subline`,\n      link: `${namespace}__link`,\n      question: `${namespace}__question`\n    }\n  }\n\n  private prepareMainElement() {\n    this.mainElement.classList.add(this.classNames.main)\n    this.mainElement.innerHTML = ''\n  }\n\n  private createNewLine(classModifier?: string): HTMLDivElement {\n    const line = document.createElement('div');\n\n    line.classList.add(this.classNames.line)\n\n    if (classModifier) {\n      line.classList.add(`${this.classNames.line}--${classModifier}`)\n    }\n\n    this.mainElement.appendChild(line)\n\n    return line\n  }\n\n  private createNewInputLine(): HTMLTextAreaElement {\n    const line = this.createNewLine()\n    const userInput = document.createElement('textarea')\n    userInput.spellcheck = false\n    userInput.autocapitalize = 'off'\n\n    line.classList.add(this.classNames.lineUserInput)\n    line.classList.add(this.classNames.lineUserInputActive)\n    userInput.classList.add(this.classNames.userInput)\n\n    line.appendChild(userInput)\n\n    return userInput\n  }\n\n  private createNewSublineElement(): HTMLElement {\n    const subline = document.createElement('span')\n    subline.classList.add(this.classNames.subline)\n\n    return subline\n  }\n\n  private async printLazy(element: Element, text: string, lazyPrintOptions: lazyPrintOptions) {\n    const options = lazyPrintOptions\n      ? lazyPrintOptions\n      : {pauseMaxTime: 70, pauseMinTime: 10}\n\n    const inTextPauses: {[position: number]: number} = {}\n    let match: null | RegExpMatchArray;\n\n    while ((match = text.match(/\\[\\d+]/)) !== null) {\n      inTextPauses[match.index] = Number(match[0].replace(/\\[|]/g, ''))\n      text = text.replace(match[0], '')\n    }\n\n    const textSplitted = text.split('')\n    let printedText = ''\n\n    for (let i = 0; i < textSplitted.length; i++) {\n      if (inTextPauses[i]) {\n        await sleep(inTextPauses[i])\n      }\n\n      const time = !options.hasOwnProperty('pauseMinTime')\n        ? options.pauseMaxTime \n        : Math.round((Math.random() * (options.pauseMaxTime - options.pauseMinTime)) + options.pauseMinTime)\n\n      await sleep(time)\n\n      printedText += textSplitted[i]\n      element.innerHTML = printedText\n    }\n  }\n\n  private executeInputHandlers(inputText: string) {\n    for (let inputHandler of this.inputHandlers) {\n      inputHandler(inputText)\n    }\n  }\n\n  async print(output: string | string[], lazy: boolean | lazyPrintOptions = false, classModifier?: string) {\n    if (this.busy) throw(new Error('Conzole is busy right now'))\n\n    this.busy = true\n    const line = this.createNewLine(classModifier)\n    const linesToPrint = typeof output === 'string' ? [output] : [...output]\n\n    for (let lineToPrint of linesToPrint) {\n      const subline = this.createNewSublineElement()\n      line.appendChild(subline)\n\n      if (lazy) {\n        await this.printLazy(subline, lineToPrint, typeof lazy === 'object' ? lazy : undefined)\n        await sleep(100)\n      } else {\n        const linksMatch = lineToPrint.match(/\\[link=.*?].*?\\[\\/link\\]/g)\n\n        if (linksMatch) {\n          for (let linkMatch of linksMatch) {\n            const [, linkHref, linkText] = linkMatch.match(/\\[link=(.*?)](.*?)\\[\\/link\\]/)\n            lineToPrint = lineToPrint.replace(linkMatch, `<a class=\"${this.classNames.link}\" href=\"${linkHref}\" target=\"_blank\">${linkText}</a>`)\n          }\n        }\n\n        subline.innerHTML = lineToPrint\n      }\n    }\n\n    this.busy = false\n  }\n\n  async printKeyDescriptionList(keyDescriptionList: KeyDescription[], minSpace: number = 3) {\n    const linesToPrint: string[] = []\n    let longestKeyLength = 0\n\n    for (let keyDescription of keyDescriptionList) {\n      if (keyDescription.key.length > longestKeyLength) {\n        longestKeyLength = keyDescription.key.length\n      }\n    }\n\n    for (let keyDescription of keyDescriptionList) {\n      const space = minSpace + (longestKeyLength - keyDescription.key.length)\n      linesToPrint.push(`${keyDescription.key}${new Array(space).fill('&nbsp;').join('')}${keyDescription.description}`)\n    }\n\n    await this.print(linesToPrint)\n  }\n\n  private addToHistory(inputText: string) {\n    this.history.unshift(inputText.replace(/\\n$/, ''))\n  }\n\n  private goToPrevInHistory() {\n    if (this.history.length) {\n      if (this.histroyIndex < 0) {\n        this.beforeHistroyInput = this.currentActiveLine.value\n      }\n\n      if (this.histroyIndex + 1 < this.history.length) {\n        this.histroyIndex += 1\n        this.currentActiveLine.value = this.history[this.histroyIndex]\n      } else {\n        this.histroyIndex = -1\n        this.currentActiveLine.value = this.beforeHistroyInput\n      }\n    }\n\n    this.moveCursorAtTheEnd()\n  }\n\n  private goToNextInHistory() {\n    if (this.histroyIndex > -1) {\n      if (this.histroyIndex === 0) {\n        this.histroyIndex = -1\n        this.currentActiveLine.value = this.beforeHistroyInput\n      } else {\n        this.histroyIndex -= 1\n        this.currentActiveLine.value = this.history[this.histroyIndex]\n      }\n    }\n\n    this.moveCursorAtTheEnd()\n  }\n\n  private moveCursorAtTheEnd() {\n    const valueLength = this.currentActiveLine.value.length\n    this.currentActiveLine.setSelectionRange(valueLength, valueLength)\n  }\n\n  private resetHistoryActions() {\n    this.histroyIndex = -1\n    this.beforeHistroyInput = ''\n  }\n\n  async input() {\n    this.currentActiveLine = this.createNewInputLine()\n\n    const keyUpListener = (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        const inputText = this.currentActiveLine.value\n        const subline = this.createNewSublineElement()\n\n        this.currentActiveLine.parentElement.classList.remove(this.classNames.lineUserInputActive)\n        subline.innerText = inputText\n        this.currentActiveLine.parentElement.appendChild(subline)\n    \n        this.currentActiveLine.removeEventListener('keyup', keyUpListener)\n        this.currentActiveLine.remove()\n\n        this.addToHistory(inputText)\n        this.resetHistoryActions()\n\n        if (inputText.trim()) {\n          this.executeInputHandlers(inputText)\n        } else {\n          this.input()\n        }\n      } else if (event.key === 'ArrowUp') {\n        this.goToPrevInHistory()\n      } else if (event.key === 'ArrowDown') {\n        this.goToNextInHistory()\n      } else {\n        this.histroyIndex === -1\n      }\n    }\n\n    this.currentActiveLine.addEventListener('keyup', keyUpListener)\n    this.currentActiveLine.focus()\n  }\n\n  question(question: string): Promise<string> {\n    const questionLine = `${question}: `\n    this.currentActiveLine = this.createNewInputLine()\n    this.currentActiveLine.value = questionLine\n\n    return new Promise((resolve) => {\n      const inputListener = (event: InputEvent) => {\n        if (this.currentActiveLine.value.length < questionLine.length) {\n          this.currentActiveLine.value = questionLine\n        }\n      }\n\n      const keyUpListener = (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          const inputText = this.currentActiveLine.value\n          const subline = this.createNewSublineElement()\n  \n          this.currentActiveLine.parentElement.classList.remove(this.classNames.lineUserInputActive)\n          subline.innerText = inputText\n          this.currentActiveLine.parentElement.appendChild(subline)\n      \n          this.currentActiveLine.removeEventListener('keyup', keyUpListener)\n          this.currentActiveLine.removeEventListener('input', inputListener)\n          this.currentActiveLine.remove()\n  \n          resolve(inputText.replace(questionLine, '').trim())\n        }\n      }\n\n      this.currentActiveLine.addEventListener('keyup', keyUpListener)\n      this.currentActiveLine.addEventListener('input', inputListener)\n      this.currentActiveLine.focus()\n    })\n  }\n\n  focus() {\n    if (this.currentActiveLine) {\n      this.currentActiveLine.focus()\n    }\n  }\n\n  onInput(callback: inputHandler) {\n    this.inputHandlers.push(callback)\n  }\n}\n\nexport default Conzole","import I18n from './I18n'\n\ninterface PropsList {\n  [prop: string]: string | number | boolean\n}\n\ninterface ProgramConfig {\n  mainCommand: string,\n  description?: string,\n  hidden?: boolean,\n  i18n: I18n,\n  propsConfig?: PropsConfig\n}\ninterface PropsConfig {\n  [prop: string]: {\n    type:  PropType,\n    default?: string | number | boolean\n  }\n}\n\ninterface DataObject {\n  print?: Print | PrintLazy | PrintKeyDescription | (Print | PrintLazy | PrintKeyDescription)[]\n}\n\ninterface Print {\n  type: 'print',\n  output: string | string[]\n}\n\ninterface PrintLazy {\n  type: 'printLazy',\n  output: string\n}\n\ninterface PrintKeyDescription {\n  type: 'printKeyDescription',\n  output: {key: string, description: string}[]\n}\n\ntype PropType = 'string' | 'number' | 'boolean'\n\ntype Run = (propsString: string) => Promise<RunResult>\n\ntype RunCallback = (propsList: PropsList) => Promise<RunResult>\n\ntype RunResult = {\n  err?: string,\n  data?: DataObject,\n  question?: {\n    text: string\n    callback: (input: string) => RunResult\n  }\n}\n\nclass Program {\n  protected mainCommand: string\n  protected description: string\n  protected hidden: boolean = false\n  protected i18n: I18n\n  private propsConfig: PropsConfig\n\n  constructor(config: ProgramConfig) {\n    this.mainCommand = config.mainCommand\n    this.i18n = config.i18n\n    this.description = config.description || 'some program, not sure what it\\'s doing...'\n    this.hidden = config.hidden || !config.description\n    this.propsConfig = config.propsConfig || {}\n  }\n\n  private createPropsFromString(propsString: string): PropsList {\n    return propsString\n      .replace(/\\n.*/g, '')\n      .split(' ')\n      .filter(string => !!string.trim().length)\n      .reduce((propsArray: string[][], currentElement: string) => {\n        if (currentElement.match(/^--/)) {\n          const splittedProp = currentElement.replace(/^--/, '').split('=')\n          const propsSubArray = [splittedProp[0].toLocaleLowerCase()]\n\n          if (splittedProp.length > 1) {\n            propsSubArray.push(splittedProp[1])\n          }\n\n          propsArray.push(propsSubArray)\n        } else if (propsArray.length && propsArray[propsArray.length - 1] && propsArray[propsArray.length - 1].length < 2) {\n          propsArray[propsArray.length - 1].push(currentElement)\n        }\n\n        return propsArray\n      }, [])\n      .reduce((propsList: PropsList, currentArgSubArray: string[]) => {\n        if (currentArgSubArray.length) {\n          if (currentArgSubArray.length === 1) {\n            propsList[currentArgSubArray[0].replace(/^no-/, '')] = !currentArgSubArray[0].match(/^no-/)\n          } else if (currentArgSubArray.length === 2) {\n            let numberValue: number\n\n            if (currentArgSubArray[1] === 'false' || currentArgSubArray[1] === 'true') {\n              propsList[currentArgSubArray[0]] = currentArgSubArray[1] === 'false' ? false : true\n            } else if ((numberValue = Number(currentArgSubArray[1])) && numberValue !== NaN) {\n              propsList[currentArgSubArray[0]] = numberValue\n            } else {\n              propsList[currentArgSubArray[0]] = currentArgSubArray[1]\n            }\n          }\n        }\n\n        return propsList\n      }, {})\n  }\n\n  private validateProps(propsList: PropsList): string | null {\n    let validationResult: string | null = null\n\n    for (let prop in propsList) {\n      if (!this.propsConfig[prop]) {\n        validationResult = `Unknown property '${prop}'`\n        break\n      }\n\n      if (typeof propsList[prop] !== this.propsConfig[prop].type) {\n        validationResult = `Property '${prop}' has wrong type. Expected ${this.propsConfig[prop].type}, got ${typeof propsList[prop]}.`\n        break\n      }\n    }\n    \n    return validationResult\n  }\n\n  protected async runCallback(propsList: PropsList): Promise<RunResult> {\n    return {err: null}\n  }\n\n  getMainCommand(): string {\n    return this.mainCommand\n  }\n\n  isHidden(): boolean {\n    return this.hidden\n  }\n\n  getDescription(): string {\n    return this.description\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.forgotAboutIt')\n      }\n    }\n  }\n\n  async run(propsString: string): Promise<RunResult> {\n    const propsList = this.createPropsFromString(propsString)\n    const propsValidationResult = this.validateProps(propsList)\n    \n    if (propsValidationResult) {\n      return {err: propsValidationResult}\n    }\n\n    return await this.runCallback(propsList)\n  }\n}\n\nexport default Program\n\nexport {\n  PropsList,\n  ProgramConfig,\n  DataObject,\n  RunResult,\n  RunCallback,\n  Run\n}","const optionsManager = {\n  setInitialLang(): string {\n    const lang = localStorage.getItem('lang') || 'en'\n    return lang\n  },\n  setInitialTheme(): string {\n    const themeClass = localStorage.getItem('themeClass') || 'theme-dark'\n    this.setTheme(themeClass)\n    return themeClass\n  },\n  saveLang(lang: string) {\n    localStorage.setItem('lang', lang)\n  },\n  saveTheme(themeClass: string) {\n    localStorage.setItem('themeClass', themeClass)   \n    this.setTheme(themeClass) \n  },\n  setTheme(themeClass: string) {\n    const body = document.body\n\n    if (body.className.match(/theme-.+?(\\s|$)/)) {\n      body.className = body.className.replace(/theme-.+?(\\s|$)/, `${themeClass}$1`)\n    } else {\n      body.classList.add(themeClass)\n    }\n  }\n}\n\nexport default optionsManager","import Program, { DataObject, RunResult } from \"./Program\";\nimport I18n from './I18n'\nimport optionsManager from './OptionsManager'\n\ninterface ThemesList {\n  [name: string]: string\n}\n\ninterface LanguagesList {\n  [name: string]: string\n}\n\ninterface OptionsPropsList {\n  theme?: string,\n  lang?: string\n}\n\nclass OptionsProgram extends Program {\n  private themes: ThemesList = {\n    light: 'theme-light',\n    dark: 'theme-dark'\n  }\n\n  private langs: LanguagesList = {\n    en: 'en',\n    pl: 'pl'\n  }\n\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'options',\n      description: i18n.key('help.optionsProgram.description'),\n      i18n,\n      propsConfig: {\n        theme: {\n          type: 'string'\n        },\n        lang: {\n          type: 'string'\n        }\n      }\n    })\n  }\n\n  protected async runCallback(propsList: OptionsPropsList): Promise<RunResult> {\n    if (propsList.theme || propsList.lang) {\n      \n      if (propsList.theme) {\n        if (this.themes[propsList.theme]) {\n          this.changeTheme(propsList.theme)\n        } else {\n          return {\n            err: this.i18n.key(\n              'options.unknownThemeError',\n              [\n                propsList.theme,\n                (() => {\n                  let themesListText: string = ''\n\n                  for (let theme in this.themes) {\n                    themesListText += `${theme} (${this.i18n.key('options.theme.' + theme)}), `\n                  }\n\n                  themesListText = themesListText.replace(/, $/, '')\n\n                  return themesListText\n                })()\n              ]\n            )\n          }\n        }\n      }\n\n      if (propsList.lang) {\n        if (this.langs[propsList.lang]) {\n          optionsManager.saveLang(this.langs[propsList.lang])\n\n          return {\n            question: {\n              text: this.i18n.key('options.resetToChangeLang'),\n              callback: (answer: string) => {\n                if (!answer || answer.toLocaleLowerCase() === 'y' || answer.toLocaleLowerCase() === 't') {\n                  window.location.href = window.location.href\n                  return {}\n                }\n\n                return {}\n              }\n            }\n          }\n        }\n      }\n    } else {\n      return {err: 'You need to provide --theme and/or --lang values.'}\n    }\n\n    return {err: null}\n  }\n\n  private changeTheme(theme: string): null | string {\n    if (this.themes[theme]) {\n      optionsManager.saveTheme(this.themes[theme])\n      return null\n    }\n\n    return `Unknown theme '${theme}'`\n  }\n\n  private changeLang(theme: string): null | string {\n    return null\n  }\n\n  help(): DataObject {\n    return {\n      print: [\n        {type: 'print', output: this.i18n.key('help.optionsProgram.title', this.mainCommand)},\n        {type: 'printKeyDescription', output: [\n          {\n            key: `${this.mainCommand} --theme [${this.i18n.key('help.optionsProgram.themeName')}]`,\n            description: this.i18n.key('help.optionsProgram.themeOptionDescription')\n          },\n          {\n            key: `${this.mainCommand} --lang [${this.i18n.key('help.optionsProgram.languageCode')}]`,\n            description: this.i18n.key('help.optionsProgram.langOptionDescription')\n          }\n        ]}\n      ]\n    }\n  }\n}\n\nexport default OptionsProgram","import Program, { DataObject } from \"./Program\";\nimport I18n from './I18n'\nimport Dialog from './Dialog'\nimport mkInfoImg from './assets/mk_info_img.jpeg'\n\n\nclass AboutProgram extends Program {\n  private classNames = {\n    main: 'about',\n    image: 'about__image',\n    text: 'about__text'\n  }\n\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'about',\n      description: i18n.key('help.aboutProgram.description'),\n      i18n\n    })\n  }\n\n  private getContent(): HTMLDivElement {\n    const mainWrapper = document.createElement('div')\n    mainWrapper.classList.add(this.classNames.main)\n\n    const image = document.createElement('img')\n    image.classList.add(this.classNames.image)\n    image.src = mkInfoImg\n\n    const text = document.createElement('p')\n    text.classList.add(this.classNames.text)\n    text.innerText = this.i18n.key('about.text')\n\n    mainWrapper.appendChild(image)\n    mainWrapper.appendChild(text)\n\n    return mainWrapper\n  }\n\n  protected async runCallback(): Promise<{ err: string; data?: any; }> {\n    const dialog = new Dialog(\n      this.getContent(),\n      {\n        name: 'About',\n        width: 600,\n        buttonOk: this.i18n.key('button.close')\n      }\n    )\n    await dialog.open()\n    return {err: null}\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.aboutProgram.detailedDescription')\n      }\n    }\n  }\n}\n\nexport default AboutProgram","interface DialogConfig {\n  name: string,\n  buttonOk: string,\n  buttonNo?: string,\n  width: number,\n  height?: number,\n  showClose: boolean\n}\n\ninterface DialogConfigArgument {\n  name?: string\n  buttonOk?: string,\n  buttonNo?: string,\n  width?: number,\n  height?: number,\n  showClose?: boolean\n}\n\nclass Dialog {\n  private mainElement: HTMLElement\n  private buttonOk: HTMLButtonElement\n  private buttonNo: HTMLButtonElement | undefined\n  private dialogClose: HTMLButtonElement | undefined\n  private config: DialogConfig\n\n  private classNames = {\n    main: 'dialog',\n    dialogWindow: 'dialog__window',\n    dialogHeader: 'dialog__header',\n    dialogName: 'dialog__name',\n    dialogClose: 'dialog__close',\n    dialogContent: 'dialog__content',\n    dialogContentDefault: 'dialog__content--default',\n    dialogButtons: 'dialog__buttons',\n    dialogButtonsMulti: 'dialog__buttons--multi',\n    dialogButton: 'dialog__button',\n    dialogButtonOk: 'dialog__button--ok',\n    dialogButtonNo: 'dialog__button--no'\n  }\n\n  constructor(slot: string | HTMLElement, config?: DialogConfigArgument) {\n    this.config = {\n      name: 'Dialog',\n      buttonOk: 'OK',\n      width: 400,\n      showClose: true,\n      ...(config ? config : {})\n    }\n\n    this.mainElement = document.createElement('div')\n    this.mainElement.classList.add(this.classNames.main)\n    \n    const dialogWindow = document.createElement('div')\n    dialogWindow.classList.add(this.classNames.dialogWindow)\n    dialogWindow.style.width = `${this.config.width}px`\n    if (this.config.height) {\n      dialogWindow.style.minHeight = `${this.config.height}px`\n    }\n    this.mainElement.appendChild(dialogWindow)\n\n    const dialogHeader = document.createElement('div')\n    dialogHeader.classList.add(this.classNames.dialogHeader)\n\n    const dialogName = document.createElement('span')\n    dialogName.classList.add(this.classNames.dialogName)\n    dialogName.innerHTML = this.config.name\n    dialogHeader.appendChild(dialogName)\n\n    if (this.config.showClose) {\n      this.dialogClose = document.createElement('button')\n      this.dialogClose.classList.add(this.classNames.dialogClose)\n      dialogHeader.appendChild(this.dialogClose)\n    }    \n\n    dialogWindow.appendChild(dialogHeader)\n\n    const dialogContent = document.createElement('div')\n    dialogContent.classList.add(this.classNames.dialogContent)\n    \n    if (typeof slot === 'string') {\n      dialogContent.innerText = slot\n      dialogContent.classList.add(this.classNames.dialogContentDefault)\n    } else {\n      dialogContent.appendChild(slot)\n    }\n\n    dialogWindow.appendChild(dialogContent)\n    \n    \n    const buttonsWrapper = document.createElement('div')\n    buttonsWrapper.classList.add(this.classNames.dialogButtons)\n\n    if (this.config.buttonNo) {\n      this.buttonNo = document.createElement('button')\n      this.buttonNo.classList.add(this.classNames.dialogButton, this.classNames.dialogButtonNo)\n      this.buttonNo.innerText = this.config.buttonNo\n      buttonsWrapper.appendChild(this.buttonNo)\n      buttonsWrapper.classList.add(this.classNames.dialogButtonsMulti)\n    }\n    \n    this.buttonOk = document.createElement('button')\n    this.buttonOk.classList.add(this.classNames.dialogButton, this.classNames.dialogButtonOk)\n    this.buttonOk.innerText = this.config.buttonOk\n\n    buttonsWrapper.appendChild(this.buttonOk)\n\n    dialogWindow.appendChild(buttonsWrapper)\n  }\n\n  open(): Promise<boolean> {\n    document.body.appendChild(this.mainElement)\n\n    return new Promise(resolve => {\n      let noListener: () => void | undefined;\n      let closeListener: () => void | undefined\n\n      const okListener = () => {\n        this.buttonOk.removeEventListener('click', okListener)\n        document.body.removeEventListener('keyup', escListener)\n        \n        if (this.buttonNo && noListener !== undefined) {\n          this.buttonNo.removeEventListener('click', noListener)\n        }\n\n        if (this.dialogClose && closeListener !== undefined) {\n          this.dialogClose.removeEventListener('click', closeListener)\n        }\n\n        this.close()\n\n        resolve(true)\n      }\n\n      this.buttonOk.addEventListener('click', okListener)\n\n      const escListener = (event: KeyboardEvent) => {\n        if (event.key.toLocaleLowerCase() === 'escape') {\n          okListener()\n        }\n      }\n\n      document.body.addEventListener('keyup', escListener)\n\n      if (this.config.showClose && this.dialogClose) {\n        closeListener = () => {\n          this.dialogClose.removeEventListener('click', closeListener)\n          this.buttonOk.removeEventListener('click', okListener)\n          document.body.removeEventListener('keyup', escListener)\n\n          if (this.buttonNo && noListener !== undefined) {\n            this.buttonNo.removeEventListener('click', noListener)\n          }\n\n          this.close();\n\n          resolve(true)\n        }\n\n        this.dialogClose.addEventListener('click', closeListener)\n      }\n\n      if (this.buttonNo) {\n        noListener = () => {\n          this.buttonNo.removeEventListener('click', noListener)\n          this.buttonOk.removeEventListener('click', okListener)\n          document.body.removeEventListener('keyup', escListener)\n\n          if (this.dialogClose && closeListener !== undefined) {\n            this.dialogClose.removeEventListener('click', closeListener)\n          }\n\n          this.close()\n\n          resolve(false)\n        }\n\n        this.buttonNo.addEventListener('click', noListener)\n      }\n    })\n  }\n\n  close() {\n    this.mainElement.remove()\n  }\n}\n\nexport default Dialog","import Program, {DataObject} from './Program'\nimport I18n from './I18n'\n\nclass LinksProgram extends Program {\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'links',\n      description: i18n.key('help.linksProgram.description'),\n      i18n\n    })\n  }\n\n  protected async runCallback(): Promise<{ err: string | null, data?: any; }> {\n    const links = [\n      {\n        key: 'linkedin:',\n        description: '[link=https://www.linkedin.com/in/mihauco]linkedin.com/in/mihauco[/link]'\n      },\n      {\n        key: 'twitter:',\n        description: '[link=https://twitter.com/mihauco]twitter.com/mihauco[/link]'\n      },\n      {\n        key: 'github:',\n        description: '[link=https://github.com/mihauco]github.com/mihauco[/link]'\n      }\n    ]\n\n    return {err: null, data: {print: {type: 'printKeyDescription', output: links}}}\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.linksProgram.detailedDescription')\n      }\n    }\n  }\n}\n\nexport default LinksProgram","import Program, { DataObject, RunResult } from \"./Program\";\nimport I18n from './I18n'\n\nclass EloRapProgram extends Program {\n  private rapList: string[] = [\n    'https://www.youtube.com/watch?v=F86i8gPgquI',\n    'https://www.youtube.com/watch?v=GbAHs3Bs8I4',\n    'https://www.youtube.com/watch?v=H30R1BUpRF8',\n    'https://www.youtube.com/watch?v=DDZFSRBCSdo'\n  ]\n\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'elorap',\n      i18n\n    })\n  }\n\n  protected async runCallback(): Promise<RunResult> {\n    const randomIndex = Math.round(Math.random() * (this.rapList.length - 1))\n\n    return {\n      data: {\n        print: {\n          type: 'print',\n          output: this.i18n.key('elorap.text1', this.rapList[randomIndex])\n        }\n      }\n    }\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.elorapProgram.detailedDescription')\n      }\n    }\n  }\n}\n\nexport default EloRapProgram","import Program, { PropsList, DataObject, RunResult } from './Program'\nimport I18n from './I18n'\n\nclass HelpProgram extends Program {\n  private programInstances: Program[]\n\n  constructor(i18n: I18n, programInstances: Program[]) {\n    super({\n      mainCommand: 'help',\n      i18n,\n      propsConfig: {\n        command: {\n          type: 'string'\n        }\n      }\n    })\n\n    this.programInstances = programInstances\n  }\n\n  protected async runCallback(propsList: PropsList): Promise<RunResult> {\n    if (propsList.command && typeof propsList.command === 'string') {\n      const commandHelpPrintData = this.getCommandHelpPrintData(propsList.command)\n\n      return {\n        err: null,\n        data: commandHelpPrintData\n      }\n    }\n\n    const list = [\n      {\n        key: this.i18n.key('help.list.commandHeader'),\n        description: this.i18n.key('help.list.descriptionHeader')\n      }\n    ]\n\n    list.push({\n      key: new Array(list[0].key.length).fill('-').join(''),\n      description: new Array(list[0].description.length).fill('-').join('')\n    })\n\n    for (const program of this.programInstances) {\n      if (!program.isHidden()) {\n        list.push({\n          key: program.getMainCommand(),\n          description: program.getDescription()\n        })\n      }\n    }\n\n    return {\n      err: null,\n      data: {\n        print: [\n          {type: 'printKeyDescription', output: list},\n          {type: 'print', output: ''},\n          {type: 'print', output: this.i18n.key('help.additionalInfro')}\n        ]\n      }\n    }\n  }\n\n  private getCommandHelpPrintData(commandName: string): DataObject {\n    const programInstance = this.programInstances.find(instance => instance.getMainCommand() === commandName)\n\n    if (programInstance) {\n      return programInstance.help()\n    }\n\n    return {print: {type: 'print', output: this.i18n.key('help.commandDoNotExist', commandName)}}\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.helpProgramDescription')\n      }\n    }\n  }\n}\n\nexport default HelpProgram","import Program, {DataObject, RunResult} from './Program'\nimport I18n from './I18n'\nimport CVpdf from './assets/michal_koczkodon_cv_30-Oct-2022.pdf'\n\nclass CVProgram extends Program {\n  constructor(i18n: I18n) {\n    super({\n      mainCommand: 'cv',\n      description: i18n.key('help.cvProgram.description'),\n      i18n\n    })\n  }\n\n  protected async runCallback(): Promise<RunResult> {\n    return {\n      data: {\n        print: {\n          type: 'print',\n          output: this.i18n.key('help.cvProgram.downloadInfo')\n        }\n      },\n      question: {\n        text: this.i18n.key('help.cvProgram.downloadProceed'),\n        callback: () => {\n          this.downloadCV()\n          return {}\n        }\n      }\n    }\n  }\n\n  private downloadCV() {\n    const link = document.createElement('a')\n    link.style.display = 'none'\n    link.target=\"_blank\"\n    link.href = CVpdf\n    link.download = \"michal_koczkodon_cv_30-Oct-2022.pdf\"\n\n    document.body.appendChild(link)\n    link.click()\n\n    setTimeout(() => {\n      link.remove()\n    }, 100)\n  }\n\n  help(): DataObject {\n    return {\n      print: {\n        type: 'print',\n        output: this.i18n.key('help.cvProgram.detailedDescription')\n      }\n    }\n  }\n}\n\nexport default CVProgram\n\n","import './index.scss'\nimport MKInfo from './MKInfo'\n\nconst mainEl: HTMLElement = document.querySelector('#mk-info')\nnew MKInfo(mainEl).start()\n","import Conzole from './Conzole'\nimport I18n from './i18n'\nimport logo from './logo'\nimport translations from './translations.json'\nimport Program from './Program'\nimport OptionsProgram from './OptionsProgram'\nimport AboutProgram from './AboutProgram'\nimport LinksProgram from './LinksProgram'\nimport EloRapProgram from './EloRapProgram'\nimport HelpProgram from './HelpProgram'\nimport CVProgram from './CVProgram'\nimport optionsManager from './OptionsManager'\nimport { isMobile } from './helpers/helpers'\nimport packagejson from '../package.json'\n\nclass MKInfo {\n  private mainEl: HTMLElement\n  private conzole: Conzole\n  private i18n: I18n\n  private lang: string\n  private programs: Program[]\n\n  constructor(mainEl: HTMLElement) {\n    optionsManager.setInitialTheme()\n    this.mainEl = mainEl\n    this.mainEl.innerHTML = ''\n    this.conzole = new Conzole(this.mainEl, 'mk-info')\n    this.lang = this.getLang()\n    this.i18n = new I18n(translations, this.lang, 'en')\n    this.programs = [\n      new OptionsProgram(this.i18n),\n      new AboutProgram(this.i18n),\n      new LinksProgram(this.i18n),\n      new EloRapProgram(this.i18n),\n      new CVProgram(this.i18n)\n    ]\n    \n    this.programs.push(\n      new HelpProgram(this.i18n, this.programs)\n    )\n  }\n\n  async start() {\n    await this.printLogo()\n    await this.conzole.print('')\n    await this.printHelloMessage()\n\n    this.bindInputEvents()\n    this.bindAutoFocusToActiveLineEvent()\n\n    this.conzole.input()\n  }\n\n  private getLang(): string {\n    return optionsManager.setInitialLang()\n  }\n\n  private async printLogo() {\n    const logoLines = logo.split('\\n').filter(line => !!line.length)\n    let belowLogoInfo: string | string[] = `v${packagejson.version}|© 2022 Michal Koczkodon`\n    let longestLogoLine = -1\n\n    for (let line of logoLines) {\n      if (line.length > longestLogoLine) longestLogoLine = line.length\n      await this.conzole.print(line, {pauseMaxTime: 3}, 'logo')\n    }\n\n    const belowLogoInfoSpaceLength = longestLogoLine - belowLogoInfo.length + 1\n\n    if (belowLogoInfoSpaceLength > 0) {\n      belowLogoInfo = belowLogoInfo.replace('|', new Array(belowLogoInfoSpaceLength).fill('&nbsp;').join(''))\n    } else {\n      belowLogoInfo.split('|')\n    }\n\n    await this.conzole.print(belowLogoInfo, false, 'app-info')\n  }\n\n  private async printHelloMessage() {\n    const helloMessage = [\n      this.i18n.key('helloText'),\n      ...(isMobile() ? [this.i18n.key('helloMobileText')] : []),\n      this.i18n.key('helloHelpInfo')\n    ]\n  \n    await this.conzole.print(helloMessage, true)\n  }\n\n  private bindInputEvents() {\n    this.conzole.onInput(async (inputText) => {\n      const mainCommand = inputText.trim().match(/^.+?(\\s|$)/)[0]?.trim() || '';\n      const programToRun = this.programs.find(program => program.getMainCommand() === mainCommand)\n\n      if (programToRun) {\n        await this.runProgram(programToRun, inputText)\n      } else {\n        await this.conzole.print(this.i18n.key('unknownProgram', mainCommand))\n      }\n\n      this.conzole.input()\n    })\n  }\n\n  private async runProgram(program: Program, input: string) {\n    let run = true\n    let result = await program.run(input.replace(/^.+?(\\s|$)/, ''))\n    \n    while (run) {\n      if (!result.question) {\n        run = false\n      }\n\n      if (result.err) {\n        await this.conzole.print(result.err)\n      }\n  \n      if (result.data) {\n        if (typeof result.data === 'string') {\n          await this.conzole.print(result.data)\n        } else {\n          if (result.data.print) {\n            const printDataArray = Array.isArray(result.data.print) ? result.data.print : [result.data.print]\n  \n            for (const printData of printDataArray) {\n              if (printData.type === 'printLazy') {\n                await this.conzole.print(printData.output, true)\n              } else if (printData.type === 'printKeyDescription') {\n                await this.conzole.printKeyDescriptionList(printData.output)\n              } else {\n                await this.conzole.print(printData.output)\n              }\n            }\n          }\n        }\n      }\n\n      if (result.question) {\n        const response = await this.conzole.question(result.question.text)\n        result = result.question.callback(response)\n      }\n    }\n  }\n\n  bindAutoFocusToActiveLineEvent() {\n    document.body.addEventListener('click', () => {\n      this.conzole.focus()\n    })\n  }\n}\n\nexport default MKInfo","interface Translations {\n  [key: string]: {\n    [lang: string]: string\n  }\n}\n\ntype Replacements = string | string[] | {[replacementKey: string]: string}\n\nclass I18n {\n  private translations: Translations\n  private lang: string\n  private fallback: string\n\n  constructor(translations: Translations, initLang: string, fallback?: string) {\n    this.translations = translations\n    this.lang = initLang\n    this.fallback = fallback || initLang\n  }\n\n  setLang(lang: string) {\n    this.lang = lang\n  }\n\n  key(key: string, replacements?: Replacements): string {\n    if (this.translations[key]) {\n      let translation = this.translations[key][this.lang] || this.translations[key][this.fallback] || undefined\n\n      if (typeof translation === 'string') {\n        if (replacements) {\n          const replacementsObject: {[key: string]: string} = {}\n\n          if (typeof replacements === 'string') {\n            replacementsObject['0'] = replacements\n          } else if (Array.isArray(replacements)) {\n            for (let index in replacements) {\n              replacementsObject[`${index}`] = replacements[index]\n            }\n          } else if (typeof replacements === 'object') {\n            for (let key in replacements) {\n              replacementsObject[`${key}`] = replacements[key]\n            }\n          }\n\n          for (let key in replacementsObject) {\n            translation = translation.replaceAll('${' + key + '}', replacementsObject[key])\n          }\n        }\n\n        return translation\n      }\n    }\n\n    return key\n  }\n}\n\nexport default I18n\n\n\n\n","const logo = `\n███╗░░░███╗██╗██╗░░██╗░█████╗░██╗░░░██╗░░░░█████╗░░█████╗░\n████╗░████║██║██║░░██║██╔══██╗██║░░░██║░░░██╔══██╗██╔══██╗\n██╔████╔██║██║███████║███████║██║░░░██║░░░██║░░╚═╝██║░░██║\n██║╚██╔╝██║██║██╔══██║██╔══██║██║░░░██║░░░██║░░██╗██║░░██║\n██║░╚═╝░██║██║██║░░██║██║░░██║╚██████╔╝██╗╚█████╔╝╚█████╔╝\n╚═╝░░░░░╚═╝╚═╝╚═╝░░╚═╝╚═╝░░╚═╝░╚═════╝░╚═╝░╚════╝░░╚════╝░\n`\n\nexport default logo","export function isMobile() {\n  return window.innerWidth <= 600\n}"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","sleep","time","Promise","resolve","setTimeout","constructor","config","hidden","mainCommand","i18n","description","propsConfig","createPropsFromString","propsString","split","filter","string","trim","reduce","propsArray","currentElement","match","splittedProp","propsSubArray","toLocaleLowerCase","push","propsList","currentArgSubArray","numberValue","Number","NaN","validateProps","validationResult","prop","type","runCallback","err","getMainCommand","isHidden","getDescription","help","print","output","key","run","propsValidationResult","setInitialLang","localStorage","getItem","setInitialTheme","themeClass","setTheme","saveLang","lang","setItem","saveTheme","body","className","classList","add","super","theme","themes","light","dark","langs","en","pl","themesListText","changeTheme","question","text","callback","answer","href","changeLang","classNames","main","image","getContent","mainWrapper","createElement","innerText","appendChild","dialog","slot","dialogWindow","dialogHeader","dialogName","dialogClose","dialogContent","dialogContentDefault","dialogButtons","dialogButtonsMulti","dialogButton","dialogButtonOk","dialogButtonNo","name","buttonOk","width","showClose","mainElement","style","height","minHeight","innerHTML","buttonsWrapper","buttonNo","open","noListener","closeListener","okListener","removeEventListener","escListener","close","addEventListener","event","remove","data","rapList","randomIndex","Math","round","random","programInstances","command","getCommandHelpPrintData","list","Array","fill","join","program","commandName","programInstance","find","instance","downloadCV","link","display","target","download","click","mainEl","conzole","el","namespace","busy","inputHandlers","history","histroyIndex","beforeHistroyInput","currentActiveLine","createClassNames","prepareMainElement","line","lineWithQuestion","lineUserInput","lineUserInputActive","userInput","subline","createNewLine","classModifier","createNewInputLine","spellcheck","autocapitalize","createNewSublineElement","printLazy","element","lazyPrintOptions","options","pauseMaxTime","pauseMinTime","inTextPauses","index","textSplitted","printedText","i","hasOwnProperty","executeInputHandlers","inputText","inputHandler","lazy","linesToPrint","lineToPrint","linksMatch","linkMatch","linkHref","linkText","printKeyDescriptionList","keyDescriptionList","minSpace","longestKeyLength","keyDescription","space","addToHistory","unshift","goToPrevInHistory","value","moveCursorAtTheEnd","goToNextInHistory","valueLength","setSelectionRange","resetHistoryActions","input","keyUpListener","parentElement","focus","questionLine","inputListener","onInput","getLang","translations","initLang","fallback","setLang","replacements","translation","replacementsObject","isArray","replaceAll","programs","start","printLogo","printHelloMessage","bindInputEvents","bindAutoFocusToActiveLineEvent","logoLines","belowLogoInfo","longestLogoLine","belowLogoInfoSpaceLength","helloMessage","innerWidth","programToRun","runProgram","result","printDataArray","printData","response","querySelector"],"sourceRoot":""}